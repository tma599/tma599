{"_id":"to","_rev":"40-67a7c086da69a12977ea303e67a47b07","name":"to","description":"load/convert between xml,json,yaml formats","dist-tags":{"latest":"0.2.9"},"versions":{"0.0.1":{"name":"to","description":"to - convertors to popular formats","homepage":"https://github.com/truepattern/to","version":"0.0.1","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.3.3"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0 < 0.7.0"},"readme":"# to\ncollection of convertors \n\n-- Nothing yet, move on --\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input json\n * Input xml\n * Input yaml\n * Input markdown\n * Input jade\n * Output markdown\n * Output json\n * Output xml\n * Output yaml\n * allow beautification params for all outputs \n\n","_id":"to@0.0.1","dist":{"shasum":"1357141563721eeec70c6568f652cae41503249b","tarball":"https://registry.npmjs.org/to/-/to-0.0.1.tgz","integrity":"sha512-LjUNllGofsRxXj3Pm1c+gFSTSe8FamfgN1Oa3MvwvtHMvy98CCPkcxmktHw2ALHSWBRTIMJUwXsz/V3/zi4/Fg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDw0sfA7Ei8vJpoN99/Fxw2x7q5x8xAi2gPFpu8H/I9QwIhALPF5z10xG+LJeNW/cuJgW9YDg7Xd6JeR1RjL1eGcC1m"}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.0.2":{"name":"to","description":"to - convertors to popular formats","homepage":"https://github.com/truepattern/to","version":"0.0.2","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.3.3","yamljs":">= 0.1.2"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0 < 0.7.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Installation\n```bash\nnpm install -g to\nnpm install to\n```\n\n## Features\n\n### Input\n\n### Output\n\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input json\n * Input xml\n * Input markdown\n * Input jade\n * Output markdown\n * Output json\n * Output xml\n * Output yaml\n * allow beautification params for all outputs \n\n","_id":"to@0.0.2","dist":{"shasum":"7337953c857cb7341b7e8ad79068f5f7e0d693e4","tarball":"https://registry.npmjs.org/to/-/to-0.0.2.tgz","integrity":"sha512-Oovzh2S9SlsLU/oIbv7bS0ffoIaCzN5RRqp76Qjg2DtdiPgNTnDao9ck+N+H3zV2dX9843wjx6FlIaDPh4Zn1Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCFLeKRd4MRa8Af1YJOKoAQYZEnoUhoTwx/FWUQlBgkQAIgRiqHWB2bnuQeQG5FbcaYsgT/eIGDLwx3hgURwpEEOR0="}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.0.3":{"name":"to","description":"to - convertors to popular formats","homepage":"https://github.com/truepattern/to","version":"0.0.3","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.3.3","yamljs":">= 0.1.2"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0 < 0.7.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * Need to handle different input/output formats including yaml,json,xml\n  * Don't want to worry about the I/O format\n\n# Installation\n```bash\nnpm install -g to\nnpm install to\n```\n\n## Features\n\n### Input\n\n### Output\n\n\n## Todo\n * Input yaml\n * Input json\n * Input xml\n * Input html (be forgiving with bad html)\n * Output json\n * Output xml\n * Output yaml\n * allow beautification params for all outputs \n\n","_id":"to@0.0.3","dist":{"shasum":"b79187795ea9e60fddeb8400beec4f11e84785bf","tarball":"https://registry.npmjs.org/to/-/to-0.0.3.tgz","integrity":"sha512-h0z3OZyXZ/F9YCCsvSATlXfvtb1ZtJD0eYz5gAW8F7/J1KZ8WaJ7dkrp6eOMHszG8jkxTZDeIy2tM2QrjX6J7A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCEItX5Otuuj1fvc3j0X1PLpm2xiwv3Nf4yeTAWn/f1dwIhAPn1wZLUqgC4BsWNCd/vO0VNYaiPqgr/8TmW707J20DS"}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.1.0":{"name":"to","description":"to - convertors to popular formats","homepage":"https://github.com/truepattern/to","version":"0.1.0","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.3.3","yamljs":">= 0.1.2"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0 < 0.7.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json,xml\n\n## Installation\n```bash\nnpm install -g to\nnpm install to\n```\n\n## Usage\nWithin program\n```js\nvar to = require('to');\n\n# Load yaml\nvar yamldoc = to.format.yaml.load('config.yaml');\n\n# print doc in yaml \nvar doc = ...;\nconsole.log(to.format.yaml.stringify(doc));\n\n```\n\n\n## Todo\n * Input json\n * Input xml\n * Input html (be forgiving with bad html)\n * Output json\n * Output xml\n * allow beautification params for all outputs \n\n","_id":"to@0.1.0","dist":{"shasum":"c243c0e9e683ef569e90350b3985c2500afc0964","tarball":"https://registry.npmjs.org/to/-/to-0.1.0.tgz","integrity":"sha512-3/f4OgWfHfJfIUEu9VV/G879uKF/BzBLs+pNKgH+uLTBNGIcfQ2SNnDu7AU4ODFC4y+N5tBWIbxrMWU9O0b2gQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD1YL5cBLeX8qP6NGN/GJotq0OCTjhLZSJirRoNETbyXgIhALSMtNUP6bcHGBGxRD74lyt2bLvKP73wKJ/XiKCqJY3H"}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.1.1":{"name":"to","description":"to - convertors to popular formats","homepage":"https://github.com/truepattern/to","version":"0.1.1","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.3.3","yamljs":">= 0.1.2"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json\n\n## Installation\n```bash\nnpm install -g to\nnpm install to\n```\n\n## Usage\nWithin program\n```js\nvar to = require('to');\n\n# Load yaml\nvar yamldoc = to.format.yaml.load('config.yaml');\n\n# print doc in yaml \nvar doc = ...;\nconsole.log(to.format.yaml.stringify(doc));\n\n```\n\n\n## Todo\n * Input xml\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n","_id":"to@0.1.1","dist":{"shasum":"ec9ff086130ebc65b3b60765a548b0f27849e36b","tarball":"https://registry.npmjs.org/to/-/to-0.1.1.tgz","integrity":"sha512-89TjtETqJDlbWyUMcnA6YeGCSW2Wg4nsCOxSwOgayAi90VbqDHDv9pQsrKvHvrkYOv4sVGONqI/F4H7qjXK4YQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIF6W9oQ9M5JCnTDRW3me19g4hjsrnNqVPssH8cRah7vFAiBGJ0a7p1Ubg2D5BPFmnMDL0G4hSFNi6DStdXs8HWrt0Q=="}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.1.2":{"name":"to","description":"to - convertors to popular formats","homepage":"https://github.com/truepattern/to","version":"0.1.2","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.3.3","yamljs":">= 0.1.2","commander":">= 1.0.4"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json\n\n## Installation\n    $ npm install -g to\n    $ npm install to\n\n## Usage\nWithin program\n```js\nvar to = require('to');\n\n# Load yaml\nvar yamldoc = to.format.yaml.load('config.yaml');\n\n# print doc in yaml \nvar doc = ...;\nconsole.log(to.format.yaml.stringify(doc));\n\n```\n\n * refer to examples for additional examples\n\n\n## Todo\n * Input xml\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n","_id":"to@0.1.2","dist":{"shasum":"561f4e07269e1a9fe6aa99626ef6021d18a7bfdd","tarball":"https://registry.npmjs.org/to/-/to-0.1.2.tgz","integrity":"sha512-wsQoQN/pJDDUgElzTvHlSAzHXezZd83j2hJzLgh3UTr0U5BWrymQXFCwF5AlSHWAP2YScN02lIR83O5P9VDlFg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG5t4Ri/AJeSoCrnU1z7vo9Wsw+7TLtfaB/sNQd+0NIQAiB3WKXaECv/MrKJfwyUVQh0dAR6YuoOFo9+IBK8ST7bnA=="}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.2.0":{"name":"to","description":"to - convertors to popular formats","homepage":"https://github.com/truepattern/to","version":"0.2.0","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.4.0","yamljs":">= 0.1.2","htmlparser":">= 1.7.6","commander":">= 1.0.4"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json,xml\n  * only input xml is handled (not output xml yet)\n\n## Installation\n    $ npm install -g to\n    $ npm install to\n\n## Usage\nWithin program\n```js\nvar to = require('to');\n\n# Load yaml\nvar yamldoc = to.format.yaml.load('config.yaml');\n\n# print doc in yaml \nvar doc = ...;\nconsole.log(to.format.yaml.stringify(doc));\n\n```\n\n * refer to examples directory for xml, json, yaml code\n\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n","_id":"to@0.2.0","dist":{"shasum":"d43ef1569608deff2cda343dbe421e2af9fcc4fe","tarball":"https://registry.npmjs.org/to/-/to-0.2.0.tgz","integrity":"sha512-0b7n99fukV2xACeaPaEuEodJQpkArOCa1m91CJs7ke8itfOAqu0SW1EYLrBHWXQQjx5xB3BSxLuhdnKvjklcHQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGKDQosmAOy+BY4+1qlomUncFwXsCpBu91EAHldqaWK/AiAtPz8W2KLzWlOUQkjSwyv2RPDqDXHeMMvjWExydWgIaQ=="}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.2.1":{"name":"to","description":"to - convertors to popular formats","homepage":"https://github.com/truepattern/to","version":"0.2.1","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.4.0","yamljs":">= 0.1.2","htmlparser":">= 1.7.6","commander":">= 1.0.4"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json,xml\n  * only input xml is handled (no output xml yet)\n\n## Installation\n    $ npm install -g to\n    $ npm install to\n\n## Usage\nWithin program\n```js\nvar to = require('to');\n\n# Load yaml\nvar yamldoc = to.format.yaml.load('config.yaml');\n\n# print doc in yaml \nvar doc = ...;\nconsole.log(to.format.yaml.stringify(doc));\n\n```\n\n * refer to examples directory for xml, json, yaml code\n\n## Output\nFor a sample xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n\n<dummy>\n  <value>15</value>\n  <value>35</value>\n  <value>5</value>\n  <value>4784</value>\n  <value>one more</value>\n  <h>decent</h>\n  <h>list</h>\n  <h>another</h>\n  <object>value</object>\n  <inner>\n    <h1>value</h1>\n    <li>got</li>\n    <li>milk</li>\n  </inner>\n</dummy>\n```\n\nOutput json\n```json\n{\n  \"dummy\": {\n    \"value\": [\n      \"15\",\n      \"35\",\n      \"5\",\n      \"4784\",\n      \"one more\"\n    ],\n    \"h\": [\n      \"decent\",\n      \"list\",\n      \"another\"\n    ],\n    \"object\": \"value\",\n    \"inner\": {\n      \"h1\": \"value\",\n      \"li\": [\n        \"got\",\n        \"milk\"\n      ]\n    }\n  }\n}\n```\n\nOutput YAML\n```yaml\ndummy:\n  value: ['15', '35', '5', '4784', 'one more']\n  h: [decent, list, another]\n  object: value\n  inner: { h1: value, li: [got, milk] }\n```\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n","_id":"to@0.2.1","dist":{"shasum":"3115d7be25c45a3b450736bcaaafb7524d343a88","tarball":"https://registry.npmjs.org/to/-/to-0.2.1.tgz","integrity":"sha512-f2fn+seL4M/kAW0sDa3IQUwqwiWrhFXVemubECPK/VCt0M+NBRfkHRn9g067OwzqajU1jvkkpX9dk5rk137bUg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICYwdkI5ZIzx9CJGyTmqvymKljQthYMz2ubDG8PWOHSqAiEA480131F026WDweDkVuqj8ekzX5EPYFOEC18VA995THo="}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.2.2":{"name":"to","description":"to - convertors to popular formats","homepage":"https://github.com/truepattern/to","version":"0.2.2","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.4.0","yamljs":">= 0.1.2","htmlparser":">= 1.7.6","commander":">= 1.0.4"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json,xml\n  * only input xml is handled (no output xml yet)\n\n## Installation\n    $ npm install -g to\n    $ npm install to\n\n## Usage\nWithin program\n```js\nvar to = require('to');\n\n# Load yaml\nvar yamldoc = to.format.yaml.load('config.yaml');\n\n# print doc in yaml \nvar doc = ...;\nconsole.log(to.format.yaml.stringify(doc));\n\n```\n\n * refer to examples directory for xml, json, yaml code\n\n## Output\nFor a sample xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n\n<dummy>\n  <value>15</value>\n  <value>35</value>\n  <value>5</value>\n  <value>4784</value>\n  <value>one more</value>\n  <h>decent</h>\n  <h>list</h>\n  <h>another</h>\n  <object>value</object>\n  <inner>\n    <h1>value</h1>\n    <li>got</li>\n    <li>milk</li>\n  </inner>\n</dummy>\n```\n\nOutput json\n```json\n{\n  \"dummy\": {\n    \"value\": [\n      \"15\",\n      \"35\",\n      \"5\",\n      \"4784\",\n      \"one more\"\n    ],\n    \"h\": [\n      \"decent\",\n      \"list\",\n      \"another\"\n    ],\n    \"object\": \"value\",\n    \"inner\": {\n      \"h1\": \"value\",\n      \"li\": [\n        \"got\",\n        \"milk\"\n      ]\n    }\n  }\n}\n```\n\nOutput YAML\n```yaml\ndummy:\n  value: ['15', '35', '5', '4784', 'one more']\n  h: [decent, list, another]\n  object: value\n  inner: { h1: value, li: [got, milk] }\n```\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n","_id":"to@0.2.2","dist":{"shasum":"8d64423ed54db955eca842e8a3fddc9b13585340","tarball":"https://registry.npmjs.org/to/-/to-0.2.2.tgz","integrity":"sha512-G2BBHLdV7e2luLazqeitg5vevKTCYEq1I8gj3if9ALQmSyAP3xLDW3FlRXkq5GnNLrGhBPdKPfVakt43y14u/Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC84MJm4JEZnw44ruC+UPAlLUFV0i4Qg/cJBDwwq0G5qAIhAOo0bOii+828zAVHofalLDrEpPe098lFdhRaX2a/bdOj"}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.2.3":{"name":"to","description":"to - convert between formats including xml, json, yaml","homepage":"https://github.com/truepattern/to","version":"0.2.3","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.4.0","yamljs":">= 0.1.2","htmlparser":">= 1.7.6","optimist":">= 0.3.5"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json,xml\n  * only input xml is handled (no output xml yet)\n\n## Installation\n    $ npm install -g to\n    $ npm install to\n\n## Usage\nWithin program\n```js\nvar to = require('to');\n\n# Load yaml\nvar yamldoc = to.format.yaml.load('config.yaml');\n\n# print doc in yaml \nvar doc = ...;\nconsole.log(to.format.yaml.stringify(doc));\n\n```\n\n * refer to examples directory for xml, json, yaml code\n\n## Output\nFor a sample xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n\n<dummy>\n  <value>15</value>\n  <value>35</value>\n  <value>5</value>\n  <value>4784</value>\n  <value>one more</value>\n  <h>decent</h>\n  <h>list</h>\n  <h>another</h>\n  <object>value</object>\n  <inner>\n    <h1>value</h1>\n    <li>got</li>\n    <li>milk</li>\n  </inner>\n</dummy>\n```\n\nOutput json\n```json\n{\n  \"dummy\": {\n    \"value\": [\n      \"15\",\n      \"35\",\n      \"5\",\n      \"4784\",\n      \"one more\"\n    ],\n    \"h\": [\n      \"decent\",\n      \"list\",\n      \"another\"\n    ],\n    \"object\": \"value\",\n    \"inner\": {\n      \"h1\": \"value\",\n      \"li\": [\n        \"got\",\n        \"milk\"\n      ]\n    }\n  }\n}\n```\n\nOutput YAML\n```yaml\ndummy:\n  value: ['15', '35', '5', '4784', 'one more']\n  h: [decent, list, another]\n  object: value\n  inner: { h1: value, li: [got, milk] }\n```\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n","_id":"to@0.2.3","dist":{"shasum":"95e32da1599579cbab11415fc21a4b20540b79cf","tarball":"https://registry.npmjs.org/to/-/to-0.2.3.tgz","integrity":"sha512-iC1r6XPzu3lJCaBNZSqPy3+t+AHKIRomqv0VPZYBGgZszjtHgD1LcQddsUG2azfvOL+tSSuO3IqrPmXWmUTD1w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCr0H/bx4UjDUeNYUm8vc87JAEdxiLtY/y6es4ZmCOYhwIhAL+2XmD4StRHuMSACHE3VzQvf1fU22CRjHfOxDIRst5g"}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.2.4":{"name":"to","description":"to - convert between formats including xml, json, yaml","homepage":"https://github.com/truepattern/to","version":"0.2.4","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.4.0","js-yaml":">= 1.0.2","htmlparser":">= 1.7.6","optimist":">= 0.3.5"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json,xml\n  * only input xml is handled (no output xml yet)\n\n## Installation\n    $ npm install -g to\n    $ npm install to\n\n## Usage\nWithin program\n```js\nvar to = require('to');\n\n# Load yaml\nvar yamldoc = to.format.yaml.load('config.yaml');\n\n# print doc in yaml \nvar doc = ...;\nconsole.log(to.format.yaml.stringify(doc));\n\n```\n\n * refer to examples directory for xml, json, yaml code\n\n## Output\nFor a sample xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n\n<dummy>\n  <value>15</value>\n  <value>35</value>\n  <value>5</value>\n  <value>4784</value>\n  <value>one more</value>\n  <h>decent</h>\n  <h>list</h>\n  <h>another</h>\n  <object>value</object>\n  <inner>\n    <h1>value</h1>\n    <li>got</li>\n    <li>milk</li>\n  </inner>\n</dummy>\n```\n\nOutput json\n```json\n{\n  \"dummy\": {\n    \"value\": [\n      \"15\",\n      \"35\",\n      \"5\",\n      \"4784\",\n      \"one more\"\n    ],\n    \"h\": [\n      \"decent\",\n      \"list\",\n      \"another\"\n    ],\n    \"object\": \"value\",\n    \"inner\": {\n      \"h1\": \"value\",\n      \"li\": [\n        \"got\",\n        \"milk\"\n      ]\n    }\n  }\n}\n```\n\nOutput YAML\n```yaml\ndummy:\n  value: ['15', '35', '5', '4784', 'one more']\n  h: [decent, list, another]\n  object: value\n  inner: { h1: value, li: [got, milk] }\n```\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n","_id":"to@0.2.4","dist":{"shasum":"bd021c07f2ed7e641a422d1ba3772a459b3b0829","tarball":"https://registry.npmjs.org/to/-/to-0.2.4.tgz","integrity":"sha512-fSYo4+TBfysW8SJLGo3tcexPxDMDtHJ0xnZPGPyU7u2azFZTdrY6Vfouc9fIALHF7ba5R9yMJQsUMYLel9Myaw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGv0qUbF4g+2ccDWrztfL+Nv+Hefyu5NQCq6lXkFRhLuAiEAtyrgnhOKA8Rvny4aNPHogMuId6GLbZ4/O7oQQZ8Uwzw="}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"}],"directories":{}},"0.2.5":{"name":"to","description":"to - convert between formats including xml, json, yaml","homepage":"https://github.com/truepattern/to","version":"0.2.5","author":{"name":"truepattern","email":"admin@truepattern.com"},"dependencies":{"underscore":">= 1.4.0","js-yaml":">= 1.0.2","htmlparser":">= 1.7.6","optimist":">= 0.3.5"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/truepattern/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json,xml\n  * only input xml is handled (no output xml yet)\n\n## Installation\n\n    $ npm install -g to\n    $ npm install to\n\n## Usage\nWithin program\n\n    var to = require('to');\n    \n    # Load yaml\n    var yamldoc = to.format.yaml.load('config.yaml');\n    \n    # print doc in yaml \n    var doc = ...;\n    console.log(to.format.yaml.stringify(doc));\n\n * refer to examples directory for xml, json, yaml code\n\n## Output\nFor a sample xml\n\n    <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n    \n    <dummy>\n    <value>15</value>\n    <value>35</value>\n    <value>5</value>\n    <value>4784</value>\n    <value>one more</value>\n    <h>decent</h>\n    <h>list</h>\n    <h>another</h>\n    <object>value</object>\n    <inner>\n      <h1>value</h1>\n      <li>got</li>\n      <li>milk</li>\n    </inner>\n   </dummy>\n\nOutput json\n\n    {\n      \"dummy\": {\n        \"value\": [\n          \"15\",\n          \"35\",\n          \"5\",\n          \"4784\",\n          \"one more\"\n        ],\n        \"h\": [\n          \"decent\",\n          \"list\",\n          \"another\"\n        ],\n        \"object\": \"value\",\n        \"inner\": {\n          \"h1\": \"value\",\n          \"li\": [\n            \"got\",\n            \"milk\"\n          ]\n        }\n      }\n    }\n\nOutput YAML\n\n    dummy:\n      value: ['15', '35', '5', '4784', 'one more']\n      h: [decent, list, another]\n      object: value\n      inner: { h1: value, li: [got, milk] }\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n","_id":"to@0.2.5","dist":{"shasum":"58a5ef30efb1c436fe7e1ba49b6cc68308e6a7c4","tarball":"https://registry.npmjs.org/to/-/to-0.2.5.tgz","integrity":"sha512-xYKnc809fEcD5E6T/tLNXMP/xupqbQdXp/3+cO49epfKX8sKEGozZUSNUOSfxLqxmvlVkLbBmLessL/vzrfe5A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDaLQKO1Q1cPBWxaMVuYupG2FT9IN3H6FYDOUj+U90AtQIhAJRUv20Zp4Spa6v2FAA9daTbYIvhMIsN+tbmLB82lbXZ"}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"},{"name":"openmason","email":"openmason@gmail.com"}],"directories":{}},"0.2.6":{"name":"to","description":"load/convert between xml,json,yaml formats","homepage":"https://github.com/openmason/to","version":"0.2.6","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{"underscore":">= 1.4.0","js-yaml":">= 1.0.2","htmlparser":">= 1.7.6","optimist":">= 0.3.5"},"devDependencies":{},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/openmason/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * handling different input/output formats: yaml,json,xml\n  * only input xml is handled (no output xml yet)\n\n## Installation\n\n    $ npm install -g to\n    $ npm install to\n\n## Usage\nWithin program\n\n    var to = require('to');\n    \n    # Load yaml\n    var yamldoc = to.format.yaml.load('config.yaml');\n    \n    # print doc in yaml \n    var doc = ...;\n    console.log(to.format.yaml.stringify(doc));\n\n * refer to examples directory for xml, json, yaml code\n\n## Output\nFor a sample xml\n\n    <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n    \n    <dummy>\n    <value>15</value>\n    <value>35</value>\n    <value>5</value>\n    <value>4784</value>\n    <value>one more</value>\n    <h>decent</h>\n    <h>list</h>\n    <h>another</h>\n    <object>value</object>\n    <inner>\n      <h1>value</h1>\n      <li>got</li>\n      <li>milk</li>\n    </inner>\n   </dummy>\n\nOutput json\n\n    {\n      \"dummy\": {\n        \"value\": [\n          \"15\",\n          \"35\",\n          \"5\",\n          \"4784\",\n          \"one more\"\n        ],\n        \"h\": [\n          \"decent\",\n          \"list\",\n          \"another\"\n        ],\n        \"object\": \"value\",\n        \"inner\": {\n          \"h1\": \"value\",\n          \"li\": [\n            \"got\",\n            \"milk\"\n          ]\n        }\n      }\n    }\n\nOutput YAML\n\n    dummy:\n      value: ['15', '35', '5', '4784', 'one more']\n      h: [decent, list, another]\n      object: value\n      inner: { h1: value, li: [got, milk] }\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n","_id":"to@0.2.6","dist":{"shasum":"f94a47c43532eb123eca2bc7f479380c22268921","tarball":"https://registry.npmjs.org/to/-/to-0.2.6.tgz","integrity":"sha512-fGMz7XH5ECzuV25JSIWAv1AMJe/3H8QKGSSOi1zAG4Z5bY+68qD5DRN37mdCLAZnnqrgXMmbttfObRDkAg6W+Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAwyskL22PLWr+DBZbWrGIw0lJd8yD5R5k97HyFqtsmSAiA7qGdvgGQtY8rWNPSXX5xtRuLUp3j/YayMadsPCPkscQ=="}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"},{"name":"openmason","email":"openmason@gmail.com"}],"directories":{}},"0.2.7":{"name":"to","description":"load/convert between xml,json,yaml formats","homepage":"https://github.com/openmason/to","version":"0.2.7","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{"handy":">= 0.0.9","underscore":">= 1.4.0","js-yaml":">= 1.0.2","htmlparser":">= 1.7.6","optimist":">= 0.3.5"},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/openmason/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * read input formats json, xml, yaml \n  * converts the document to internal javascript object form\n  * write output as json, yaml documents\n  * only input xml is handled (no output xml yet)\n\n## Installation\n\n    $ npm install -g to\n    $ npm install to\n\n## Usage\n\nCommand line:\n\n     # reads xml file and prints it in yml\n     $ to -i examples/sample.xml -o .yaml\n     \n     # reads yaml and prints it in json\n     $ to -i examples/sample.yml -o .json\n\nWithin your program:\n\n    var to = require('to');\n    \n    # Load yaml\n    var yamldoc = to.format.yaml.load('config.yaml');\n    \n    # print doc in yaml \n    var doc = ...;\n    console.log(to.format.yaml.stringify(doc));\n\n * refer to examples directory for xml, json, yaml code\n\n## Example\nFor a sample input xml:\n\n    <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">    \n    <dummy>\n    <value>15</value>\n    <value>35</value>\n    <value>5</value>\n    <value>4784</value>\n    <value>one more</value>\n    <h>decent</h>\n    <h>list</h>\n    <h>another</h>\n    <object>value</object>\n    <inner>\n      <h1>value</h1>\n      <li>got</li>\n      <li>milk</li>\n    </inner>\n   </dummy>\n\nOutput in json:\n\n    {\n      \"dummy\": {\n        \"value\": [\n          \"15\",\n          \"35\",\n          \"5\",\n          \"4784\",\n          \"one more\"\n        ],\n        \"h\": [\n          \"decent\",\n          \"list\",\n          \"another\"\n        ],\n        \"object\": \"value\",\n        \"inner\": {\n          \"h1\": \"value\",\n          \"li\": [\n            \"got\",\n            \"milk\"\n          ]\n        }\n      }\n    }\n    \n    # to try this example\n    $ to -i examples/sample1.xml -o .json\n\nOutput in yaml:\n\n    dummy: \n      value: \n        - 15\n        - 35\n        - 5\n        - 4784\n        - \"one more\"\n      h: \n        - decent\n        - list\n        - another\n      object: value\n      inner: \n        h1: value\n        li: \n          - got\n          - milk\n\n    # to try this example\n    $ to -i examples/sample1.xml -o .yaml\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"to@0.2.7","dist":{"shasum":"f9b5a3064957026a639c6683372bfd4953758ae6","tarball":"https://registry.npmjs.org/to/-/to-0.2.7.tgz","integrity":"sha512-IhZ11jXya1ad57VTHBec/I2NPjDTR2BLCY9QyZNZx6WtaelkZGDGEMprcJ5v94FPVDGm/mnwMKEDLg35pAZerw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICP093hMReBoWAsAvz1NidoIWMzM/hv1XCLpI5v/QmtBAiA/9H1KRMwc7N02lWUodGSQtwVf7x+yoGrO3LEJxfy8xA=="}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"},{"name":"openmason","email":"openmason@gmail.com"}],"directories":{}},"0.2.8":{"name":"to","description":"load/convert between xml,json,yaml formats","homepage":"https://github.com/openmason/to","version":"0.2.8","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{"handy":">= 0.0.10","underscore":">= 1.4.0","js-yaml":">= 1.0.2","htmlparser":">= 1.7.6","optimist":">= 0.3.5"},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/openmason/to"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * read input formats json, xml, yaml \n  * converts the document to internal javascript object form\n  * write output as json, yaml documents\n  * only input xml is handled (no output xml yet)\n\n## Installation\n\n    $ npm install -g to\n    $ npm install to\n\n## Usage\n\nCommand line:\n\n     # reads xml file and prints it in yml\n     $ to -i examples/sample.xml -o .yaml\n     \n     # reads yaml and prints it in json\n     $ to -i examples/sample.yml -o .json\n\nWithin your program:\n\n    var to = require('to');\n    \n    # Load yaml\n    var yamldoc = to.format.yaml.load('config.yaml');\n    \n    # print doc in yaml \n    var doc = ...;\n    console.log(to.format.yaml.stringify(doc));\n\n * refer to examples directory for xml, json, yaml code\n\n## Example\nFor a sample input xml:\n\n    <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">    \n    <dummy>\n    <value>15</value>\n    <value>35</value>\n    <value>5</value>\n    <value>4784</value>\n    <value>one more</value>\n    <h>decent</h>\n    <h>list</h>\n    <h>another</h>\n    <object>value</object>\n    <inner>\n      <h1>value</h1>\n      <li>got</li>\n      <li>milk</li>\n    </inner>\n   </dummy>\n\nOutput in json:\n\n    {\n      \"dummy\": {\n        \"value\": [\n          \"15\",\n          \"35\",\n          \"5\",\n          \"4784\",\n          \"one more\"\n        ],\n        \"h\": [\n          \"decent\",\n          \"list\",\n          \"another\"\n        ],\n        \"object\": \"value\",\n        \"inner\": {\n          \"h1\": \"value\",\n          \"li\": [\n            \"got\",\n            \"milk\"\n          ]\n        }\n      }\n    }\n    \n    # to try this example\n    $ to -i examples/sample1.xml -o .json\n\nOutput in yaml:\n\n    dummy: \n      value: \n        - 15\n        - 35\n        - 5\n        - 4784\n        - \"one more\"\n      h: \n        - decent\n        - list\n        - another\n      object: value\n      inner: \n        h1: value\n        li: \n          - got\n          - milk\n\n    # to try this example\n    $ to -i examples/sample1.xml -o .yaml\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"to@0.2.8","dist":{"shasum":"cf8215d1d9cff186d20b94579da93f3f9626e82d","tarball":"https://registry.npmjs.org/to/-/to-0.2.8.tgz","integrity":"sha512-hF1l2ILU6IZ++dofZrHlK8caVYNRnQbCvK5x6rR5JF0KEf0EYmZJPGBzI+8aZZJRjKCBStG9N92Sn8qRdghbfA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD2r13rE1sRRSodWodX6KCxyf3OMu2rn/3X3YNGrXPggAIhAImKKSWSUYIpRHsB4tH3/TPo1edV/3P0GJ3cXX7gjiIN"}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"},{"name":"openmason","email":"openmason@gmail.com"}],"directories":{}},"0.2.9":{"name":"to","description":"load/convert between xml,json,yaml formats","homepage":"https://github.com/openmason/to","version":"0.2.9","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{"handy":">= 0.0.11","underscore":">= 1.4.0","js-yaml":">= 1.0.2","htmlparser":">= 1.7.6","optimist":">= 0.3.5"},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["converter","convertor","json","xml","yaml"],"repository":{"type":"git","url":"git://github.com/openmason/to"},"main":"index","scripts":{"prepublish":"npm prune","test":"make test"},"engines":{"node":">= 0.8.0"},"readme":"[![build status](https://secure.travis-ci.org/openmason/to.png)](http://travis-ci.org/openmason/to)\n\n# to.js\ncollection of convertors.\nComes with command line options to use the convertors along with a library version that can be used within programs as well.\n\n# Solves\n  * read input formats json, xml, yaml \n  * converts the document to internal javascript object form\n  * write output as json, yaml documents\n  * only input xml is handled (no output xml yet)\n\n## Installation\n\n    $ npm install -g to\n    $ npm install to\n\n## Usage\n\nCommand line:\n\n     # reads xml file and prints it in yml\n     $ to -i examples/sample.xml -o .yaml\n     \n     # reads yaml and prints it in json\n     $ to -i examples/sample.yml -o .json\n\nWithin your program:\n\n    var to = require('to');\n    \n    # Load yaml\n    var yamldoc = to.format.yaml.load('config.yaml');\n    \n    # print doc in yaml \n    var doc = ...;\n    console.log(to.format.yaml.stringify(doc));\n\n * refer to examples directory for xml, json, yaml code\n\n## Example\nFor a sample input xml:\n\n    <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">    \n    <dummy>\n    <value>15</value>\n    <value>35</value>\n    <value>5</value>\n    <value>4784</value>\n    <value>one more</value>\n    <h>decent</h>\n    <h>list</h>\n    <h>another</h>\n    <object>value</object>\n    <inner>\n      <h1>value</h1>\n      <li>got</li>\n      <li>milk</li>\n    </inner>\n   </dummy>\n\nOutput in json:\n\n    {\n      \"dummy\": {\n        \"value\": [\n          \"15\",\n          \"35\",\n          \"5\",\n          \"4784\",\n          \"one more\"\n        ],\n        \"h\": [\n          \"decent\",\n          \"list\",\n          \"another\"\n        ],\n        \"object\": \"value\",\n        \"inner\": {\n          \"h1\": \"value\",\n          \"li\": [\n            \"got\",\n            \"milk\"\n          ]\n        }\n      }\n    }\n    \n    # to try this example\n    $ to -i examples/sample1.xml -o .json\n\nOutput in yaml:\n\n    dummy: \n      value: \n        - 15\n        - 35\n        - 5\n        - 4784\n        - \"one more\"\n      h: \n        - decent\n        - list\n        - another\n      object: value\n      inner: \n        h1: value\n        li: \n          - got\n          - milk\n\n    # to try this example\n    $ to -i examples/sample1.xml -o .yaml\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input markdown \n * Output xml\n * Output html\n * add unit tests\n * allow beautification params for all outputs \n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"to@0.2.9","dist":{"shasum":"0ba5a56fe53538db9205ceb6d7ed217aae4635c4","tarball":"https://registry.npmjs.org/to/-/to-0.2.9.tgz","integrity":"sha512-Xb5kmQVcuba43Ac3fCXVcF8bthDGdg0jeUoyQpyOhVDr3D9sKkLRp7fgkP32eh4lSHY3XzfuhFstU2wLyNGk2g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCkVNgy/xq6FFh1k8Qkt64gSDBR21oD3HgPQLAJ4P45mQIhAL6KvY13gnmVIMvPYxPzv4EjWGEPsmJb+DMVicTo31sU"}]},"maintainers":[{"name":"truepattern","email":"admin@truepattern.com"},{"name":"openmason","email":"openmason@gmail.com"}],"directories":{}}},"readme":"# to\ncollection of convertors \n\n-- Nothing yet, move on --\n\n## Todo\n * Input html (be forgiving with bad html)\n * Input json\n * Input xml\n * Input yaml\n * Input markdown\n * Input jade\n * Output markdown\n * Output json\n * Output xml\n * Output yaml\n * allow beautification params for all outputs \n\n","maintainers":[{"email":"marcacyr+npm@gmail.com","name":"marcacyr2"}],"time":{"modified":"2022-06-27T07:21:57.314Z","created":"2012-09-08T08:26:38.567Z","0.0.1":"2012-09-08T08:26:39.910Z","0.0.2":"2012-09-14T06:59:31.040Z","0.0.3":"2012-09-14T07:44:32.205Z","0.1.0":"2012-09-14T08:04:30.643Z","0.1.1":"2012-09-24T03:07:45.688Z","0.1.2":"2012-09-30T04:06:28.327Z","0.2.0":"2012-09-30T06:44:46.449Z","0.2.1":"2012-09-30T08:17:07.263Z","0.2.2":"2012-09-30T18:14:06.036Z","0.2.3":"2012-10-14T23:50:37.389Z","0.2.4":"2012-10-15T00:28:48.337Z","0.2.5":"2012-10-17T19:05:35.329Z","0.2.6":"2012-11-01T19:40:09.055Z","0.2.7":"2012-12-09T04:49:20.912Z","0.2.8":"2012-12-09T06:08:19.171Z","0.2.9":"2012-12-12T02:47:19.373Z"},"author":{"name":"el aras","email":"openmason@gmail.com"},"repository":{"type":"git","url":"git://github.com/openmason/to"},"users":{"semencov":true,"pgilad":true}}