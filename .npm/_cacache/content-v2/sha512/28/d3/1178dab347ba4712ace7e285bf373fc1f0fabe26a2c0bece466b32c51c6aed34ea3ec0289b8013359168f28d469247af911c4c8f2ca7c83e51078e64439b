{"_id":"handy","_rev":"29-ee6a75e9dacdb38ce7896678cb92a724","name":"handy","description":"Common utility functions","dist-tags":{"latest":"0.0.13"},"versions":{"0.0.1":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.1","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n-- Nothing yet, move on --\n\n\n","_id":"handy@0.0.1","dist":{"shasum":"f4187386d4b2169f97b153b610a40bf781c446dc","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.1.tgz","integrity":"sha512-LOKqtuoI92xMDc8ZGx11fDcuZZT1Ht36OWtEI7AiNDbzoi9BzEKr8ia3yAQrG0xt1Yf+MFQVYGIfR7PauNIaYA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBMxSGR72/91m8bKZjLM92JJ7gt+TFIARNBz7e9moZWcAiA9jcGqzHRNtEIhina0CdkeHP/glERJg1Zbm/0CRON/zw=="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.2":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.2","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      * [1] path where package.json is present (optional)\n    * returns - value of 'version' in package.json\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.2","dist":{"shasum":"172a8b84d34a55a22b17a291c9a583805030ba10","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.2.tgz","integrity":"sha512-rWCtM5YOG903/FUgqJqmc2p4WIVEB7ebhv4f66mmqECnJFt079hP3dNDIm4aha/G/OIlRdhpoBJ/L7sagDdM8A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD7+jaCeUcXIfFkyl2jYCtA7Vbpa4BlvXOmsg4ZHp+jNwIgS7FbwKaW0OEs77IHggsikn1Z5wG3mSC/Ll2Mf7RRE/w="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.3":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.3","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      * [1] path where package.json is present (optional)\n    * returns - value of 'version' in package.json\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.3","dist":{"shasum":"1ebc9ac7903f7e332afd4d255c9bb1415faffccd","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.3.tgz","integrity":"sha512-w4jnM2fbRzWYIzBAA3RBkEMBzpns0zaHLf80cJ2n32Za0R3w+PzSDXsWkLtCRY0LKDJ086bA18Sr9Sy967/7tg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAKWhNclct+ccYXnVbGINJ+m/bgxk7yuYO/2Q/tpMU1WAiBGZNLnmDkc3Y3dHwt/NXETB4iH0o0CW9EWDrw/MOAL4w=="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.4":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.4","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      * [1] path where package.json is present (optional)\n    * returns - value of 'version' in package.json\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.4","dist":{"shasum":"d8fd6c95e4a8b9102651b95fb22cf25d0af68689","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.4.tgz","integrity":"sha512-DWyozR2RMkja4wL7jDSfyXvi/5CSQ8sQao7qxOpvaJqR3fRkGKxf4WW/RS0/fkdgsjsl/BBM+WUco737+9pPiQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBxnVFzznBTZaU4suX4lXO5BAIKkh/xBq58z77m9QwKbAiEAqO7bHWBmCl1163t0m/ZcTnvRgx/g6YmQl7grXj9kQ4Q="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.5":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.5","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns - value of 'version' in package.json\n    * example:\n    \n        var handy = require('handy');\n        var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n        var handy = require('handy');\n        var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object ...)\n    \n        var handy = require('handy');\n        var xyz = [1,2,3];\n        if(handy.getType(xyz)=='array') { \n          ... do something ...\n        };\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n        var handy = require('handy');\n        var x = {a:1}, y={b:2}, z={a:4,c:5};\n        var r = handy.merge(x,y,z);\n        // r => {a:4, b:2, c:5}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.5","dist":{"shasum":"55c5aa119cb867521b558b1b34a59c814140f9b3","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.5.tgz","integrity":"sha512-Qtg4hSxPC41ZmkD4eTFncaepZoCjyaj9UMQXCQ1ReWFzDp7gGAVh5ECYGcDKtuypdq+E+35tFq1iuy3wf3fRGQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDCJZjwLgZgRCtYb91Lrq1q7JOzox2oedTK6BkQX8uY8QIgIYvN+EakIa4OWfOGZAg2Vo/f2ytBj9GMUnEBIev7LWk="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.6":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.6","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns - value of 'version' in package.json\n    * example:\n    \n            var handy = require('handy');\n            var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n            var handy = require('handy');\n            var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object ...)\n    \n            var handy = require('handy');\n            var xyz = [1,2,3];\n            if(handy.getType(xyz)=='array') { \n              ... do something ...\n            };\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1}, y={b:2}, z={a:4,c:5};\n            var r = handy.merge(x,y,z);\n            // r => {a:4, b:2, c:5}\n\n  * deepMerge - merge objects, all hashes at all levels are merged (arrays left intact)\n    * arguments\n      1. variable arguments, pass objects that needs to be deep merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1,p:{a:5}}, y={b:2}, z={a:4,c:5,p:{a:3,b:11}};\n            var r = handy.deepMerge(x,y,z);\n            // r => {a:4, b:2, c:5, p:{a:3,b:11}}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.6","dist":{"shasum":"0ef8392e0684b77e12481e6dd6903e26808540fe","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.6.tgz","integrity":"sha512-2cBMQMjnHYcflrujR4RTD58zC8uk0CLnl8qThXro/zlKl959aEERFH2jCBcozVvCQYUnc9CW6DIhBo7yRlFYxg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDWBV5ToPYg+Y19y+S4GUXjOMThQqen12LJWp8O0gfLlQIgNlDc+I50J5TCKQX6lw7Z5vqHG34D5drbY/mcpEpbpe4="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.7":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.7","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns - value of 'version' in package.json\n    * example:\n    \n            var handy = require('handy');\n            var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n            var handy = require('handy');\n            var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object ...)\n    \n            var handy = require('handy');\n            var xyz = [1,2,3];\n            if(handy.getType(xyz)=='array') { \n              ... do something ...\n            };\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1}, y={b:2}, z={a:4,c:5};\n            var r = handy.merge(x,y,z);\n            // r => {a:4, b:2, c:5}\n\n  * deepMerge - merge objects, all hashes at all levels are merged (arrays left intact)\n    * arguments\n      1. variable arguments, pass objects that needs to be deep merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1,p:{a:5}}, y={b:2}, z={a:4,c:5,p:{a:3,b:11}};\n            var r = handy.deepMerge(x,y,z);\n            // r => {a:4, b:2, c:5, p:{a:3,b:11}}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.7","dist":{"shasum":"a99e6307c63613c48b31465d37b8030192d6838a","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.7.tgz","integrity":"sha512-x0ntSRTKb5aLJqiVUQtn6nbOKZb1DHc3R4eTpXPl9rim7TlLLEO6AxQrLw1RLgiLadX21rHoK4iLI33jXw+XOg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC8v0I3bugZQj0ziKtmBWhn5J9rMpk2JbRTSJEoikD8EAIgG5e5RbTDh3yW2tSZrXXWC8LsCTDxN1DpoC9puQuEt/E="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.8":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.8","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns\n      * value of 'version' in package.json (or)\n      * emptry string if unable to find package.json\n    * example:\n    \n            var handy = require('handy');\n            var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n            var handy = require('handy');\n            var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object', 'regex' ...)\n    \n            var handy = require('handy');\n            var xyz = [1,2,3];\n            if(handy.getType(xyz)=='array') { \n              ... do something ...\n            };\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1}, y={b:2}, z={a:4,c:5};\n            var r = handy.merge(x,y,z);\n            // r => {a:4, b:2, c:5}\n\n  * deepMerge - merge objects, all hashes at all levels are merged (arrays left intact)\n    * arguments\n      1. variable arguments, pass objects that needs to be deep merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1,p:{a:5}}, y={b:2}, z={a:4,c:5,p:{a:3,b:11}};\n            var r = handy.deepMerge(x,y,z);\n            // r => {a:4, b:2, c:5, p:{a:3,b:11}}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.8","dist":{"shasum":"8a40af83f9710b06419ade9b6f64c6de062651d2","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.8.tgz","integrity":"sha512-nTj/tbA3m4nzLTaSHAsg+QUaSfSwBi1/RyPjTrCAQ9+jzqQSV5Lj+loYbNbqjY2B8jpqg6fLREFVAjLSS9pZ9g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDfxzm8IcsoJ5LqdsUYiFFsjtLGq4Oo5DMEOIWv2l9lPgIhAKR4BOFQVd+3df+XK2namzgRngbj8Bjnm0cbetLDisI8"}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.9":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.9","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns\n      * value of 'version' in package.json (or)\n      * emptry string if unable to find package.json\n    * example:\n    \n            var handy = require('handy');\n            var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n            var handy = require('handy');\n            var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object', 'regex' ...)\n    \n            var handy = require('handy');\n            var xyz = [1,2,3];\n            if(handy.getType(xyz)=='array') { \n              ... do something ...\n            };\n\n  * isArrayEqual - check if two arrays are equal, irrespective of order of elements\n    * arguments: pass two array objects\n    * returns - true (if both arrays are equal), else false\n    \n            var handy = require('handy');\n            var x = [93,1,6], y=[6,93,1];\n            var r = handy.isArrayEqual(x,y);\n            // r => true\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1}, y={b:2}, z={a:4,c:5};\n            var r = handy.merge(x,y,z);\n            // r => {a:4, b:2, c:5}\n\n  * deepMerge - merge objects, all hashes at all levels are merged (arrays left intact)\n    * arguments\n      1. variable arguments, pass objects that needs to be deep merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1,p:{a:5}}, y={b:2}, z={a:4,c:5,p:{a:3,b:11}};\n            var r = handy.deepMerge(x,y,z);\n            // r => {a:4, b:2, c:5, p:{a:3,b:11}}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.9","dist":{"shasum":"e599fe9ce983f58e8262ef4fc9a7ced6cfc2a6d3","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.9.tgz","integrity":"sha512-2as7485qPdlw/8qPfzb9deJJoYa6DZGtPsFtlUZlq1owzxAPTR+oF47TZVF7jLPwfpHd+Xj26fAFxGs1JvnYFQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIH90wZieQ3fVKRFDmsXXn7pNaaNFQhSB98iMTSifuJ+2AiEA1/z9GyGpRL9VQjEgXAiCla1LjgiWXSYdVThleEoYJvc="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.10":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.10","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune"},"engines":{"node":">= 0.5.0"},"readme":"# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns\n      * value of 'version' in package.json (or)\n      * emptry string if unable to find package.json\n    * example:\n    \n            var handy = require('handy');\n            var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n            var handy = require('handy');\n            var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object', 'regex' ...)\n    \n            var handy = require('handy');\n            var xyz = [1,2,3];\n            if(handy.getType(xyz)=='array') { \n              ... do something ...\n            };\n\n  * getFileExtension\n    * arguments\n      1. filename - filename for which the extension to be returned\n      2. defaultExt - default extension if no extension found\n    * returns - extension from the filename (or) defaultExt \n    \n            var handy = require('handy');\n            var x = \"abc/this/there.x.y.j\"\n            var r = handy.getFileExtension(x);\n            // r => 'j'\n\n  * isArrayEqual - check if two arrays are equal, irrespective of order of elements\n    * arguments: pass two array objects\n    * returns - true (if both arrays are equal), else false\n    \n            var handy = require('handy');\n            var x = [93,1,6], y=[6,93,1];\n            var r = handy.isArrayEqual(x,y);\n            // r => true\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1}, y={b:2}, z={a:4,c:5};\n            var r = handy.merge(x,y,z);\n            // r => {a:4, b:2, c:5}\n\n  * deepMerge - merge objects, all hashes at all levels are merged (arrays left intact)\n    * arguments\n      1. variable arguments, pass objects that needs to be deep merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1,p:{a:5}}, y={b:2}, z={a:4,c:5,p:{a:3,b:11}};\n            var r = handy.deepMerge(x,y,z);\n            // r => {a:4, b:2, c:5, p:{a:3,b:11}}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.10","dist":{"shasum":"aeac9fcafafc3cc1d8501c3ee7add64d1513da1b","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.10.tgz","integrity":"sha512-eT+JCeKKvp3R3VyVBHABwrMde73MIGlgkybQo0HOWnvhWI2BgFNgu/zGBUNSnmq4IKJaBFjigGZXdDpmVLbYQw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCKSQKerpqDs86vegoh7Si50QxnviEPIZnWZMNLeZj4gQIgUoY2RP434jf737N+AzIW6OWrx8K7SOqKH9HX6yT9Bj4="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.11":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.11","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune","test":"make test"},"engines":{"node":">= 0.8.0"},"readme":"[![build status](https://secure.travis-ci.org/openmason/handy.png)](http://travis-ci.org/openmason/handy)\n\n# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns\n      * value of 'version' in package.json (or)\n      * emptry string if unable to find package.json\n    * example:\n    \n            var handy = require('handy');\n            var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n            var handy = require('handy');\n            var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object', 'regex' ...)\n    \n            var handy = require('handy');\n            var xyz = [1,2,3];\n            if(handy.getType(xyz)=='array') { \n              ... do something ...\n            };\n\n  * getFileExtension\n    * arguments\n      1. filename - filename for which the extension to be returned\n      2. defaultExt - default extension if no extension found\n    * returns - extension from the filename (or) defaultExt \n    \n            var handy = require('handy');\n            var x = \"abc/this/there.x.y.j\"\n            var r = handy.getFileExtension(x);\n            // r => 'j'\n\n  * isArrayEqual - check if two arrays are equal, irrespective of order of elements\n    * arguments: pass two array objects\n    * returns - true (if both arrays are equal), else false\n    \n            var handy = require('handy');\n            var x = [93,1,6], y=[6,93,1];\n            var r = handy.isArrayEqual(x,y);\n            // r => true\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1}, y={b:2}, z={a:4,c:5};\n            var r = handy.merge(x,y,z);\n            // r => {a:4, b:2, c:5}\n\n  * deepMerge - merge objects, all hashes at all levels are merged (arrays left intact)\n    * arguments\n      1. variable arguments, pass objects that needs to be deep merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1,p:{a:5}}, y={b:2}, z={a:4,c:5,p:{a:3,b:11}};\n            var r = handy.deepMerge(x,y,z);\n            // r => {a:4, b:2, c:5, p:{a:3,b:11}}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","_id":"handy@0.0.11","dist":{"shasum":"2d009a52b4185d41815d192a337aa29a12c9367c","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.11.tgz","integrity":"sha512-jekU5WWpNFIUqCge2uRMdxbD3e2sy7P0CJtH/E/NJQ2xjKYkmQ1cN/hL0yv1bimHIjb9KjifmMRjkyWXVzWbeA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIB1gOEA2Ww21FaLiJNxHBI/qYQFdiw9TQaIztuE/ZsDhAiBzBpUx7LFhg0Mljgj07suVUpatWit7cnMvKhdiUraKfg=="}]},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.12":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.12","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune","test":"make test"},"engines":{"node":">= 0.8.0"},"readme":"[![build status](https://secure.travis-ci.org/openmason/handy.png)](http://travis-ci.org/openmason/handy)\n\n# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns\n      * value of 'version' in package.json (or)\n      * emptry string if unable to find package.json\n    * example:\n    \n            var handy = require('handy');\n            var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n            var handy = require('handy');\n            var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object', 'regex' ...)\n    \n            var handy = require('handy');\n            var xyz = [1,2,3];\n            if(handy.getType(xyz)=='array') { \n              ... do something ...\n            };\n\n  * getFileExtension\n    * arguments\n      1. filename - filename for which the extension to be returned\n      2. defaultExt - default extension if no extension found\n    * returns - extension from the filename (or) defaultExt \n    \n            var handy = require('handy');\n            var x = \"abc/this/there.x.y.j\"\n            var r = handy.getFileExtension(x);\n            // r => 'j'\n\n  * isArrayEqual - check if two arrays are equal, irrespective of order of elements\n    * arguments: pass two array objects\n    * returns - true (if both arrays are equal), else false\n    \n            var handy = require('handy');\n            var x = [93,1,6], y=[6,93,1];\n            var r = handy.isArrayEqual(x,y);\n            // r => true\n\n  * isObjectEqual - check if two objects are equal, irrespective of order of keys (if value is an array, it is expected to be in same order)\n    * arguments: pass two objects\n    * returns - true (if both arrays are equal), else false\n    \n            var handy = require('handy');\n            var x = {a:'hello', b:{scores:[1,2,3], name:'tal'}, id:123}, y={id:123,a:'hello',b:{name:'tal',scores:[1,2,3]}};\n            var r = handy.isObjectEqual(x,y);\n            // r => true\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1}, y={b:2}, z={a:4,c:5};\n            var r = handy.merge(x,y,z);\n            // r => {a:4, b:2, c:5}\n\n  * deepMerge - merge objects, all hashes at all levels are merged (arrays left intact)\n    * arguments\n      1. variable arguments, pass objects that needs to be deep merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1,p:{a:5}}, y={b:2}, z={a:4,c:5,p:{a:3,b:11}};\n            var r = handy.deepMerge(x,y,z);\n            // r => {a:4, b:2, c:5, p:{a:3,b:11}}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","readmeFilename":"README.md","_id":"handy@0.0.12","dist":{"shasum":"bb71d2caa830a742f8d53cb7c59d07be6ad645da","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.12.tgz","integrity":"sha512-I9T40Eg5JbZ/4g9JyhjJ0N1ci4d3dyCRDT5zn/kgQyuE0po13E0wmmzFhctDXcf+d3fm1G70CIvospjnRC+jGA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBUSpAS8915MhZvRewIIh0S9acRS0fO6bNnfLPFB0ZSeAiEA9sP3TBOgUrCo6TQ8m+cFJE9+9DxgTAk/nix0zk6+q8M="}]},"_npmVersion":"1.2.0","_npmUser":{"name":"openmason","email":"openmason@gmail.com"},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]},"0.0.13":{"name":"handy","description":"Common utility functions","homepage":"https://github.com/openmason/handy","version":"0.0.13","author":{"name":"el aras","email":"openmason@gmail.com"},"dependencies":{},"devDependencies":{"mocha":">= 1.6.0","should":">= 1.2.0"},"keywords":["handy","utilities","utility","belt"],"repository":{"type":"git","url":"git://github.com/openmason/handy"},"main":"index","scripts":{"prepublish":"npm prune","test":"make test"},"engines":{"node":">= 0.8.0"},"readme":"[![build status](https://secure.travis-ci.org/openmason/handy.png)](http://travis-ci.org/openmason/handy)\n\n# handy\nBunch of common utility functions\n\n## Functionality\n\n  * getVersion\n    * arguments\n      1. path where package.json is present (optional)\n    * returns\n      * value of 'version' in package.json (or)\n      * emptry string if unable to find package.json\n    * example:\n    \n            var handy = require('handy');\n            var ver = handy.getVersion(__dirname);\n\n  * getUserHome\n    * returns - home directory for current user (platform agnostic)\n    \n            var handy = require('handy');\n            var home = handy.getUserHome();\n\n  * getType\n    * arguments\n      1. object - for which type to be determined\n    * returns - type of the object in lowercase ('number', 'array', 'object', 'regex' ...)\n    \n            var handy = require('handy');\n            var xyz = [1,2,3];\n            if(handy.getType(xyz)=='array') { \n              ... do something ...\n            };\n\n  * getFileExtension\n    * arguments\n      1. filename - filename for which the extension to be returned\n      2. defaultExt - default extension if no extension found\n    * returns - extension from the filename (or) defaultExt \n    \n            var handy = require('handy');\n            var x = \"abc/this/there.x.y.j\"\n            var r = handy.getFileExtension(x);\n            // r => 'j'\n\n  * isArrayEqual - check if two arrays are equal, irrespective of order of elements\n    * arguments: pass two array objects\n    * returns - true (if both arrays are equal), else false\n    \n            var handy = require('handy');\n            var x = [93,1,6], y=[6,93,1];\n            var r = handy.isArrayEqual(x,y);\n            // r => true\n\n  * isObjectEqual - check if two objects are equal, irrespective of order of keys (if value is an array, it is expected to be in same order)\n    * arguments: pass two objects\n    * returns - true (if both objects are equal), else false\n    \n            var handy = require('handy');\n            var x = {a:'hello', b:{scores:[1,2,3], name:'tal'}, id:123}, y={id:123,a:'hello',b:{name:'tal',scores:[1,2,3]}};\n            var r = handy.isObjectEqual(x,y);\n            // r => true\n\n  * merge - shallow merge objects\n    * arguments\n      1. variable arguments, pass objects that needs to be merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1}, y={b:2}, z={a:4,c:5};\n            var r = handy.merge(x,y,z);\n            // r => {a:4, b:2, c:5}\n\n  * deepMerge - merge objects, all hashes at all levels are merged (arrays left intact)\n    * arguments\n      1. variable arguments, pass objects that needs to be deep merged\n    * returns - merged object (or) {} \n    \n            var handy = require('handy');\n            var x = {a:1,p:{a:5}}, y={b:2}, z={a:4,c:5,p:{a:3,b:11}};\n            var r = handy.deepMerge(x,y,z);\n            // r => {a:4, b:2, c:5, p:{a:3,b:11}}\n\n## Install\n\n    $ npm install handy\n    # please include handy to your package.json\n\n## Test cases\nTo execute full test cases\n\n    $ make\n\n","readmeFilename":"README.md","_id":"handy@0.0.13","dist":{"shasum":"825b38d3ed28cc9fabb06957588b4a89433c8467","tarball":"https://registry.npmjs.org/handy/-/handy-0.0.13.tgz","integrity":"sha512-/zQlqn2DyEjstyfw4lY/JjtPQiKSkZrKn3XsXsEawJwF1CNfbuXzFPGydFAo5Wve+1NHT6lJL7vwhyg5VSgNUw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCcFjmsOKtf8EuTexaV/b0QV/jXgy+RT27Lw3FjXWdBJQIhAM340gdBu3L0KINmL92LTt4n8BbZR7jGXbXIC4hVqM8T"}]},"_npmVersion":"1.2.0","_npmUser":{"name":"openmason","email":"openmason@gmail.com"},"maintainers":[{"name":"openmason","email":"openmason@gmail.com"}]}},"readme":"# handy\nBunch of common utility functions\n\n-- Nothing yet, move on --\n\n\n","maintainers":[{"name":"openmason","email":"openmason@gmail.com"}],"time":{"modified":"2022-06-18T18:56:35.949Z","created":"2012-11-02T00:27:33.337Z","0.0.1":"2012-11-02T00:27:34.394Z","0.0.2":"2012-11-02T00:55:55.730Z","0.0.3":"2012-11-02T01:13:23.607Z","0.0.4":"2012-11-02T01:24:50.587Z","0.0.5":"2012-11-02T23:25:50.169Z","0.0.6":"2012-11-03T02:05:06.496Z","0.0.7":"2012-11-05T04:52:29.208Z","0.0.8":"2012-12-09T03:59:52.401Z","0.0.9":"2012-12-09T04:45:13.628Z","0.0.10":"2012-12-09T05:42:48.027Z","0.0.11":"2012-12-09T06:37:45.830Z","0.0.12":"2013-02-26T03:58:38.570Z","0.0.13":"2013-02-27T18:27:46.818Z"},"author":{"name":"el aras","email":"openmason@gmail.com"},"repository":{"type":"git","url":"git://github.com/openmason/handy"}}